' Gambas module file

' Variables a transferir
Private adi As String               '' Directorio del programa
Private apc As String               '' Archivo de configuracion del programa
Private CADConfig As String         '' CAD config file
Private etx As String               '' Editor de texto plano por defecto
Private lgf As String               '' Archivo de registro de incidencias
Public lgg As Logger               '' Registro de eventos de la aplicaciÃ³n.
'----------------------
Public jCommands As New JSONCollection   '' Commands list

Public vColors As New Variant[]     '' Colors list (ACI)
Public ColorsRGB As New Variant[]    '' Colors lists each item as [r,g,b] Integer[]
Public vLtypes As New Variant[]     '' Linetypes list
Public vWidths As New Variant[]     '' Widths list
Public sDecimal As String            '' Character used in system for separation decimal
Public cEntities As New Collection   '' DWG Entities list

Public sApplicationDirectory As String

Public Sub Main()

  '  Dim i As Integer

  SetDirsAndFiles()
  SetAppEventsLog()
  SetEnvironmentVars()
  SetExternalApps()
  SetCommandsList()

  sApplicationDirectory = User.Home &/ "." & String.Alphanumeric(Lower(Application.Name))
  If Not Exist(sApplicationDirectory) Then
    Shell "md -p " & sApplicationDirectory Wait
  Endif

  cEntities = dwg.DWGEntityList()

  FMain.Show()

End

'' Activation of the event log system

Private Sub SetAppEventsLog()

  If Exist(lgf) = False Then
    Shell "touch " & lgf Wait
  Endif
  lgg = New Logger(Logger.Info, Logger.DefaultFormat, lgf)
  lgg.Begin

End

Private Sub SetCommandsList()

  jCommands.Add(["cancel", "^c"], "cancel")
  jCommands.Add(["chamfer", "cd"], "chamfer")
  jCommands.Add(["copy", "c"], "copy")
  jCommands.Add(["divide", "dx"], "divide")
  jCommands.Add(["erase", "de"], "erase")
  jCommands.Add(["extend", "e"], "extend")
  jCommands.Add(["fillet", "f"], "fillet")
  jCommands.Add(["mirror", "mn"], "mirror")
  jCommands.Add(["move", "m"], "move")
  jCommands.Add(["offset", "fg"], "offset")
  jCommands.Add(["pan", "zc"], "pan")
  jCommands.Add(["rotate", "rt"], "rotate")
  jCommands.Add(["scale", "sc"], "scale")
  jCommands.Add(["stretch", "s"], "stretch")
  jCommands.Add(["trim", "tr"], "trim")
  'jCommands.Add(["zoome", "zx"], "zoome")
  'jCommands.Add(["zoomw", "z"], "zoomw")

  jCommands.Add(["arc", "a"], "arc")
  jCommands.Add(["circle", "cv", [("Center point"), ("Radius")]], "circle")
  jCommands.Add(["dim", "dw"], "dim")
  'jCommands.Add(["dim", "dw"], "dim")

  jCommands.Add(["ellipse", "ew"], "ellipse")
  jCommands.Add(["hatch", "ht"], "hatch")
  jCommands.Add(["insert", "b", [("Select point"), ("Angle"), ("Scale")]], "insert")
  jCommands.Add(["leader", "li"], "leader")
  jCommands.Add(["line", "l", [("First point"), ("Second point")]], "line")
  jCommands.Add(["mtext", "tt", [("Select point"), ("Angle"), ("Height")]], "mtext")
  jCommands.Add(["lwpolyline", "po", [("Select point")]], "lwpolyline")
  jCommands.Add(["rectangle", "re", [("First point"), ("Second point")]], "rectangle")
  jCommands.Add(["solid", "sa", [("Select point")]], "solid")
  jCommands.Add(["spline", "sq", [("Select point")]], "spline")
  jCommands.Add(["text", "t", [("Select point"), ("Angle"), ("Height")]], "text")

  ' jCommands.Add(["beam", "w1"], "beam")
  ' jCommands.Add(["column", "w2"], "column")
  ' jCommands.Add(["slab3p", "w3"], "slab3p")
  ' jCommands.Add(["slab4p", "w4"], "slab4p")
  ' jCommands.Add(["wallcolumn", "w5"], "wallcolumn")

  'jCommands.Add(["layers", "lk"], "layers")

End

' Public Function ComandsSteps() As ReturnType
'
'   ComandsSteps.Add()
'
' End

Private Sub SetDirsAndFiles()

  'Dim i As Integer
  'Dim thx As New String[]           '' Lista de temas del editor interno

  sDecimal = sog.GetLcNumeric()[0]

  '' Verificar que existe el direcotrio del porgrama en Home
  adi = User.Home &/ "." & String.LCase(vag.NoSymbols(Application.Title))
  ' sFonts = adi &/ "fonts/lfe"
  ' sTextures = adi &/ "textures"

  apc = adi &/ "cfg.xml"
  lgf = adi &/ Format(Now(), "yyyy") & ".log"

  If Exist(adi) = False Then
    Shell "mkdir -p " & adi Wait
  Endif

  ' If Exist(sFonts) = False Then
  '   Shell "mkdir -p " & sFonts Wait
  ' Endif

  ' thx.Clear
  ' thx = fil.RListFiles("./fonts/lfe", ["lff"])
  '
  ' If thx.Count > 0 Then
  '   For i = 0 To thx.Max
  '     If Exist(thx[i]) Then
  '       If Exist(sFonts &/ File.Name(thx[i])) = False Then
  '         Copy thx[i] To sFonts &/ File.Name(thx[i])
  '       Endif
  '     Endif
  '   Next
  ' Endif

  ' If Exist(sTextures) = False Then
  '   Shell "mkdir -p " & sTextures Wait
  ' Endif

  ' thx.Clear
  ' thx = fil.RListFiles("./textures", ["jpg", "jpeg", "png"])
  '
  ' If thx.Count > 0 Then
  '   For i = 0 To thx.Max
  '     If Exist(thx[i]) Then
  '       If Exist(sTextures &/ File.Name(thx[i])) = False Then
  '         Copy thx[i] To sTextures &/ File.Name(thx[i])
  '       Endif
  '     Endif
  '   Next
  ' Endif

End

Private Sub SetEnvironmentVars()

  ''Vars for OpenGL window
  Dim i As Integer

  ' Select xmg.GetVar("CAD.Background-Dark", apc)
  '
  '   Case True
  '     flgWindowBackColor = Color.White
  '     flgWindowInfoColor = &HFFFF00
  '     flgWindowTextColor = Color.Blue
  '     flgWindowCursorColor = Color.Black
  '     flgWhiteAndBlack = Color.Black
  '
  '   Case Else
  '     flgWindowBackColor = Color.Black
  '     flgWindowInfoColor = &HA0A000
  '     flgWindowTextColor = Color.Yellow
  '     flgWindowCursorColor = Color.White
  '     flgWhiteAndBlack = Color.White
  '
  ' End Select

  '' Setting the special environment variables from XML file
  ''TODO: Change to a json text file

  CADConfig = adi &/ "cad.xml"

  '' Load the colors list
  ColorsRGB = dwg.DWGColors()
  For i = 0 To ColorsRGB.Max
    vColors.Add(Color.RGB(ColorsRGB[i][0], ColorsRGB[i][1], ColorsRGB[i][2]))
  Next

  '' Load the linetypes list
  vLtypes = dwg.NewStyles()

  '' Load the linetypes list
  vWidths = dwg.NewWidths()

  ' gcolor = cad.GauchoDecodeColor()
  '
  ' ' corrijo los colores que no se ven contra el fondo
  ' gcolor[0] = flgWhiteAndBlack
  ' gcolor[7] = flgWhiteAndBlack
  ' gcolor[255] = flgWhiteAndBlack
  ' gcolor[250] = flgWhiteAndBlack

End

'' Setting the external applications

Private Sub SetExternalApps()

  '' Setting the default plain text editor in the system
  If sog.MimeDefaultApp("text/plain").Count > 0 Then
    etx = sog.MimeDefaultApp("text/plain")[0]
  Else
    etx = ""
  Endif

End
